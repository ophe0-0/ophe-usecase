---
- name: Retrieve OS users from windows
  hosts: all

  tasks:
    - name: retrive info of list of user
      ansible.windows.win_powershell:
        script: Get-LocalUser | Select-Object name
      register: local_users

    - name: retrive info of groups
      ansible.windows.win_powershell:
        script: Get-LocalGroup
    
    - name: Status of active user
      ansible.windows.win_powershell:
        script: Get-LocalUser | Where-Object { $_.Enabled -eq $true } | Select-Object -Property Name

    - name: Status of disable user
      ansible.windows.win_powershell:
        script: Get-LocalUser | Where-Object { $_.Enabled -eq $false } | Select-Object -Property Name

    #- name: list of groups of the users listed
    #  ansible.windows.win_powershell:
    #    script: Get-LocalUser | ForEach-Object { $user = $_; $groups = Get-LocalGroup | Where-Object { Get-LocalGroupMember -Group $_.Name -Member $user.Name -ErrorAction SilentlyContinue } | Select-Object -ExpandProperty Name; [PSCustomObject]@{ UserName = $user.Name; Groups = $groups -join ", " } } | Format-Table -AutoSize
    #  register: group

    #- name: output
    # ansible.builtin.debug:
    #    msg: "{{ group }}"

    - name: Execute PowerShell script to get users and groups
      ansible.windows.win_shell: |
        Get-LocalUser | ForEach-Object {
           [PSCustomObject]@{
             UserName = $_.Name
             Groups = (Get-LocalGroup | Where-Object {
                Get-LocalGroupMember -Group $_.Name -Member $_.Name -ErrorAction SilentlyContinue
            }).Name -join ", "
            }
        } 
      register: user_groups_output

    - name: Display the output
      debug:
        var: user_groups_output.stdout_lines

