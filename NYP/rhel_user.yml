---
- name: Retrieve OS users from rhel
  hosts: all

  tasks:
    - name: retrive info for users
      ansible.builtin.command: getent passwd
      register: users_info

    - name: Extract usernames
      ansible.builtin.set_fact:
        users_list: "{{ users_info.stdout_lines | map('split', ':') | selectattr('8', 'ne', '/sbin/nologin') | map('first') }}"

    - name: Get groups for each user
      ansible.builtin.shell: "id -Gn {{ item }}"
      register: user_groups
      loop: "{{ users_list }}"
      changed_when: false

    - name: Display users and their groups
      ansible.builtin.debug:
        msg: "{{ item.item }} is in groups: {{ item.stdout }}"
      loop: "{{ user_groups.results }}"

    - name: Get list of all users
      ansible.builtin.shell: |
        getent passwd | awk -F: '{ print $1 }'
      register: all_users

    - name: Check status of each user
      ansible.builtin.shell: |
        passwd_status=$(passwd -S {{ item }})
        if echo "$passwd_status" | grep -q " L "; then
          echo "User {{ item }} is locked/disabled."
        else
          echo "User {{ item }} is active."
        fi
      loop: "{{ all_users.stdout_lines }}"
      register: user_statuses

    - name: Merge user statuses with groups
      ansible.builtin.set_fact:
        merged_info: "{{ merged_info | default({}) | combine({item.item: {'status': item.stdout, 'groups': (user_groups.results | selectattr('item', 'equalto', item.item) | map(attribute='stdout') | first)}}) }}"
      loop: "{{ user_statuses.results }}"

    - name: Display all user statuses and groups together
      ansible.builtin.debug:
        msg: "User {{ item.key }} is {{ item.value.status }} and is in groups: {{ item.value.groups }}"
      loop: "{{ merged_info|dict2items }}"